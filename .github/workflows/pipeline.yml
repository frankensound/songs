name: Songs microservice CI/CD

on:
  push:
    paths-ignore:
      - "README.md"
    branches:
      - main

jobs:
  build-and-test:
    name: Build and test Ktor project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
      - name: Build with Gradle
        run: ./gradlew build
      - name: Run tests
        run: ./gradlew test

  sonarcloud:
    needs: [ build-and-test ]
    name: Code linting with SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'oracle'
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

  publish:
    name: Publish Dockerfile to Dockerhub
    needs: [ build-and-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
      - name: Build with Gradle
        run: ./gradlew build
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/songs-microservice:latest

  deploy:
      name: Deployment
      needs: [ build-and-test, publish ]
      runs-on: ubuntu-latest
      steps:
        - name: Finish
          run: echo "Finish deploying"
          shell: bash

  snyk:
      name: Static security analysis with Synk
      needs: [ build-and-test ]
      runs-on: ubuntu-latest
      permissions:
        security-events: write
      steps:
        - uses: actions/checkout@v3
        - name: Run Snyk to check for vulnerabilities
          uses: snyk/actions/gradle-jdk17@master
          continue-on-error: true
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          with:
            args: --sarif-file-output=snyk.sarif
        - name: Upload result to GitHub Code Scanning
          uses: github/codeql-action/upload-sarif@v2
          with:
            sarif_file: snyk.sarif
